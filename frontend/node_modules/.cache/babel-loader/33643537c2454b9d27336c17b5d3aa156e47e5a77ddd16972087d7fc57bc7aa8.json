{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DamsB\\\\Desktop\\\\302\\\\frontend\\\\src\\\\components\\\\UI\\\\Table\\\\BasicTable.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\n{\n  rows.map((row, rowIndex) => {\n    prepareRow(row);\n    const isNewRow = rowIndex === data.length - 1 && isEditing; // Проверяем, является ли строка новой\n    return /*#__PURE__*/_createElement(\"tr\", {\n      ...row.getRowProps(),\n      key: rowIndex,\n      className: classes.table__row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 9\n      }\n    }, row.cells.map(cell => {\n      var _editableCell, _editableCell2;\n      return /*#__PURE__*/_createElement(\"td\", {\n        ...cell.getCellProps(),\n        key: cell.column.id,\n        className: classes.table__cell,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 17\n        }\n      }, cell.column.id === 'id' ?\n      /*#__PURE__*/\n      // Если столбец 'id', то ячейка нередактируемая\n      _jsxDEV(\"div\", {\n        className: classes.cellContent,\n        children: cell.render('Cell')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 25\n      }, this) : ((_editableCell = editableCell) === null || _editableCell === void 0 ? void 0 : _editableCell.rowIndex) === rowIndex && ((_editableCell2 = editableCell) === null || _editableCell2 === void 0 ? void 0 : _editableCell2.columnId) === cell.column.id ?\n      /*#__PURE__*/\n      // Редактируемая ячейка (одиночная)\n      _jsxDEV(\"input\", {\n        className: classes.input,\n        value: editedCells[`${rowIndex}-${cell.column.id}`] || data[rowIndex][cell.column.id] || '',\n        onChange: e => handleInputChange(rowIndex, cell.column.id, e.target.value),\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }, this) : isNewRow && cell.column.id !== 'id' ?\n      /*#__PURE__*/\n      // Новая строка (все ячейки, кроме 'id', редактируемые)\n      _jsxDEV(\"input\", {\n        className: classes.input,\n        value: editedCells[`${rowIndex}-${cell.column.id}`] || data[rowIndex][cell.column.id] || '',\n        onChange: e => handleInputChange(rowIndex, cell.column.id, e.target.value),\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this) :\n      /*#__PURE__*/\n      // Обычная ячейка (нередактируемая)\n      _jsxDEV(\"div\", {\n        className: classes.cellContent,\n        children: [editedCells[`${rowIndex}-${cell.column.id}`] || cell.render('Cell'), (cell.column.id === 'Статус' || cell.column.id.startsWith('Сотрудник') || cell.column.id === 'Адрес') && /*#__PURE__*/_jsxDEV(Pencil, {\n          className: classes.editIcon,\n          size: 16,\n          onClick: () => handleEditClick(rowIndex, cell.column.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this));\n    }));\n  });\n}","map":{"version":3,"names":["rows","map","row","rowIndex","prepareRow","isNewRow","data","length","isEditing","_createElement","getRowProps","key","className","classes","table__row","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","cells","cell","_editableCell","_editableCell2","getCellProps","column","id","table__cell","_jsxDEV","cellContent","children","render","editableCell","columnId","input","value","editedCells","onChange","e","handleInputChange","target","onBlur","handleBlur","startsWith","Pencil","editIcon","size","onClick","handleEditClick"],"sources":["C:/Users/DamsB/Desktop/302/frontend/src/components/UI/Table/BasicTable.jsx"],"sourcesContent":["{rows.map((row, rowIndex) => {\r\n    prepareRow(row);\r\n    const isNewRow = rowIndex === data.length - 1 && isEditing; // Проверяем, является ли строка новой\r\n    return (\r\n        <tr {...row.getRowProps()} key={rowIndex} className={classes.table__row}>\r\n            {row.cells.map((cell) => (\r\n                <td {...cell.getCellProps()} key={cell.column.id} className={classes.table__cell}>\r\n                    {cell.column.id === 'id' ? ( // Если столбец 'id', то ячейка нередактируемая\r\n                        <div className={classes.cellContent}>\r\n                            {cell.render('Cell')}\r\n                        </div>\r\n                    ) : (editableCell?.rowIndex === rowIndex && editableCell?.columnId === cell.column.id) ? (\r\n                        // Редактируемая ячейка (одиночная)\r\n                        <input\r\n                            className={classes.input}\r\n                            value={editedCells[`${rowIndex}-${cell.column.id}`] || data[rowIndex][cell.column.id] || ''}\r\n                            onChange={(e) => handleInputChange(rowIndex, cell.column.id, e.target.value)}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    ) : isNewRow && cell.column.id !== 'id' ? (\r\n                        // Новая строка (все ячейки, кроме 'id', редактируемые)\r\n                        <input\r\n                            className={classes.input}\r\n                            value={editedCells[`${rowIndex}-${cell.column.id}`] || data[rowIndex][cell.column.id] || ''}\r\n                            onChange={(e) => handleInputChange(rowIndex, cell.column.id, e.target.value)}\r\n                            onBlur={handleBlur}\r\n                        />\r\n                    ) : (\r\n                        // Обычная ячейка (нередактируемая)\r\n                        <div className={classes.cellContent}>\r\n                            {editedCells[`${rowIndex}-${cell.column.id}`] || cell.render('Cell')}\r\n                            {(cell.column.id === 'Статус' || cell.column.id.startsWith('Сотрудник') || cell.column.id === 'Адрес') && (\r\n                                <Pencil\r\n                                    className={classes.editIcon}\r\n                                    size={16}\r\n                                    onClick={() => handleEditClick(rowIndex, cell.column.id)}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </td>                                                                \r\n            ))}\r\n        </tr>\r\n    );\r\n})}"],"mappings":";;;AAAA;EAACA,IAAI,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,KAAK;IACzBC,UAAU,CAACF,GAAG,CAAC;IACf,MAAMG,QAAQ,GAAGF,QAAQ,KAAKG,IAAI,CAACC,MAAM,GAAG,CAAC,IAAIC,SAAS,CAAC,CAAC;IAC5D,oBACIC,cAAA;MAAA,GAAQP,GAAG,CAACQ,WAAW,CAAC,CAAC;MAAEC,GAAG,EAAER,QAAS;MAACS,SAAS,EAAEC,OAAO,CAACC,UAAW;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACnElB,GAAG,CAACmB,KAAK,CAACpB,GAAG,CAAEqB,IAAI;MAAA,IAAAC,aAAA,EAAAC,cAAA;MAAA,oBAChBf,cAAA;QAAA,GAAQa,IAAI,CAACG,YAAY,CAAC,CAAC;QAAEd,GAAG,EAAEW,IAAI,CAACI,MAAM,CAACC,EAAG;QAACf,SAAS,EAAEC,OAAO,CAACe,WAAY;QAAAb,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,GAC5EE,IAAI,CAACI,MAAM,CAACC,EAAE,KAAK,IAAI;MAAA;MAAK;MACzBE,OAAA;QAAKjB,SAAS,EAAEC,OAAO,CAACiB,WAAY;QAAAC,QAAA,EAC/BT,IAAI,CAACU,MAAM,CAAC,MAAM;MAAC;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,GACL,EAAAG,aAAA,GAAAU,YAAY,cAAAV,aAAA,uBAAZA,aAAA,CAAcpB,QAAQ,MAAKA,QAAQ,IAAI,EAAAqB,cAAA,GAAAS,YAAY,cAAAT,cAAA,uBAAZA,cAAA,CAAcU,QAAQ,MAAKZ,IAAI,CAACI,MAAM,CAACC,EAAE;MAAA;MACjF;MACAE,OAAA;QACIjB,SAAS,EAAEC,OAAO,CAACsB,KAAM;QACzBC,KAAK,EAAEC,WAAW,CAAC,GAAGlC,QAAQ,IAAImB,IAAI,CAACI,MAAM,CAACC,EAAE,EAAE,CAAC,IAAIrB,IAAI,CAACH,QAAQ,CAAC,CAACmB,IAAI,CAACI,MAAM,CAACC,EAAE,CAAC,IAAI,EAAG;QAC5FW,QAAQ,EAAGC,CAAC,IAAKC,iBAAiB,CAACrC,QAAQ,EAAEmB,IAAI,CAACI,MAAM,CAACC,EAAE,EAAEY,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;QAC7EM,MAAM,EAAEC;MAAW;QAAA1B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,GACFf,QAAQ,IAAIiB,IAAI,CAACI,MAAM,CAACC,EAAE,KAAK,IAAI;MAAA;MACnC;MACAE,OAAA;QACIjB,SAAS,EAAEC,OAAO,CAACsB,KAAM;QACzBC,KAAK,EAAEC,WAAW,CAAC,GAAGlC,QAAQ,IAAImB,IAAI,CAACI,MAAM,CAACC,EAAE,EAAE,CAAC,IAAIrB,IAAI,CAACH,QAAQ,CAAC,CAACmB,IAAI,CAACI,MAAM,CAACC,EAAE,CAAC,IAAI,EAAG;QAC5FW,QAAQ,EAAGC,CAAC,IAAKC,iBAAiB,CAACrC,QAAQ,EAAEmB,IAAI,CAACI,MAAM,CAACC,EAAE,EAAEY,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;QAC7EM,MAAM,EAAEC;MAAW;QAAA1B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;MAAA;MAEF;MACAS,OAAA;QAAKjB,SAAS,EAAEC,OAAO,CAACiB,WAAY;QAAAC,QAAA,GAC/BM,WAAW,CAAC,GAAGlC,QAAQ,IAAImB,IAAI,CAACI,MAAM,CAACC,EAAE,EAAE,CAAC,IAAIL,IAAI,CAACU,MAAM,CAAC,MAAM,CAAC,EACnE,CAACV,IAAI,CAACI,MAAM,CAACC,EAAE,KAAK,QAAQ,IAAIL,IAAI,CAACI,MAAM,CAACC,EAAE,CAACiB,UAAU,CAAC,WAAW,CAAC,IAAItB,IAAI,CAACI,MAAM,CAACC,EAAE,KAAK,OAAO,kBACjGE,OAAA,CAACgB,MAAM;UACHjC,SAAS,EAAEC,OAAO,CAACiC,QAAS;UAC5BC,IAAI,EAAE,EAAG;UACTC,OAAO,EAAEA,CAAA,KAAMC,eAAe,CAAC9C,QAAQ,EAAEmB,IAAI,CAACI,MAAM,CAACC,EAAE;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CACJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAET,CAAC;IAAA,CACR,CACD,CAAC;EAEb,CAAC,CAAC;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}