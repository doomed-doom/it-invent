{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DamsB\\\\Desktop\\\\302\\\\frontend\\\\src\\\\pages\\\\Assets\\\\Assets.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { fetchData } from \"../../utils/fetchData\";\nimport Loader from \"../../components/UI/Loader/Loader\";\nimport classes from \"../Page.module.css\";\nimport MyButton from \"../../components/UI/Button/MyButton\";\nimport { BasicTable } from \"../../components/UI/Table/BasicTable\";\nimport MySubmitButton from \"../../components/UI/SubmitButton/MySubmitButton\";\nimport { COLUMNS } from \"../../components/UI/Table/Columns\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Assets = () => {\n  _s();\n  const tab = window.location.pathname.split(\"/assets/\")[1];\n  const [data, setData] = useState(null);\n  const [values, setValues] = useState();\n  const [isVisible, setVisible] = useState(false);\n  const tableRef = useRef();\n  const fileInputRef = useRef(null);\n  useEffect(() => {\n    setData(null); // Сбрасываем данные перед загрузкой новых\n    fetchData(\"assets\", \"get\", null, fetchedData => {\n      setData(fetchedData);\n    });\n  }, [tab]); // Перезапрашиваем данные при изменении tab\n\n  const handleButtonClick = () => {\n    fileInputRef.current.click();\n  };\n  const handleFileChange = event => {\n    const selectedFile = event.target.files[0];\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append(\"file\", selectedFile);\n      formData.append(\"name\", tab);\n      fetchData(`assets/import/`, \"POST\", formData, () => {\n        fetchData(\"assets\", \"get\", null, setData); // Перезапрашиваем данные после импорта\n      }, setValues, setValues);\n    }\n  };\n  const handleDownload = () => {\n    fetchData(`assets/export?name=${tab}`, \"GET\", null, null, error => console.error(\"Ошибка запроса:\", error), null, true, `${tab}_table.csv`);\n  };\n  useEffect(() => {\n    setVisible(false);\n  }, [tab]);\n  const toggleVisible = () => {\n    setVisible(!isVisible);\n  };\n\n  // console.log(tableRef.current?.getIsEditing?.());\n\n  // useEffect((isEditing) => {\n  //     toggleVisible()\n  // }, [isEditing])\n\n  let buttonText = isVisible ? \"Отмена\" : \"Создать запись\";\n  console.log(tableRef.current.getIsEditing());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.main,\n    children: data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(BasicTable, {\n        columnlist: COLUMNS,\n        ref: tableRef,\n        fulldata: data[tab]\n      }, `${tab}-${values}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(MyButton, {\n          style: {\n            marginTop: '20px',\n            marginRight: '20px',\n            width: '250px'\n          },\n          onClick: () => {\n            toggleVisible();\n            if (!isVisible) {\n              var _tableRef$current;\n              (_tableRef$current = tableRef.current) === null || _tableRef$current === void 0 ? void 0 : _tableRef$current.addRow();\n              toggleVisible();\n            } else {\n              tableRef.current.cancelEdit();\n            }\n          },\n          text: buttonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MySubmitButton, {\n          isActive: isVisible,\n          style: {\n            marginTop: '20px',\n            marginRight: '20px',\n            width: '250px'\n          },\n          text: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C\",\n          onClick: () => {\n            tableRef.current.sendData();\n            toggleVisible();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          },\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n          style: {\n            marginTop: '20px',\n            marginLeft: 'auto',\n            width: '250px'\n          },\n          onClick: handleButtonClick,\n          isActive: false,\n          text: `Импорт\n                                ${values ? \"values\" : \"\"}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n          style: {\n            marginTop: '20px',\n            marginLeft: '20px',\n            width: '250px'\n          },\n          onClick: handleDownload,\n          isActive: true,\n          text: 'Экспорт'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(Assets, \"lBN9yNnJGBGiWgF5OwEUNsc8U30=\");\n_c = Assets;\nexport default Assets;\nvar _c;\n$RefreshReg$(_c, \"Assets\");","map":{"version":3,"names":["React","useEffect","useState","useRef","fetchData","Loader","classes","MyButton","BasicTable","MySubmitButton","COLUMNS","jsxDEV","_jsxDEV","Fragment","_Fragment","Assets","_s","tab","window","location","pathname","split","data","setData","values","setValues","isVisible","setVisible","tableRef","fileInputRef","fetchedData","handleButtonClick","current","click","handleFileChange","event","selectedFile","target","files","formData","FormData","append","handleDownload","error","console","toggleVisible","buttonText","log","getIsEditing","className","main","children","columnlist","ref","fulldata","fileName","_jsxFileName","lineNumber","columnNumber","style","display","marginTop","marginRight","width","onClick","_tableRef$current","addRow","cancelEdit","text","isActive","sendData","type","onChange","marginLeft","margin","_c","$RefreshReg$"],"sources":["C:/Users/DamsB/Desktop/302/frontend/src/pages/Assets/Assets.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { fetchData } from \"../../utils/fetchData\";\nimport Loader from \"../../components/UI/Loader/Loader\";\nimport classes from \"../Page.module.css\";\nimport MyButton from \"../../components/UI/Button/MyButton\";\nimport { BasicTable } from \"../../components/UI/Table/BasicTable\";\nimport MySubmitButton from \"../../components/UI/SubmitButton/MySubmitButton\";\nimport { COLUMNS } from \"../../components/UI/Table/Columns\";\n\nconst Assets = () => {\n    const tab = window.location.pathname.split(\"/assets/\")[1];\n    const [data, setData] = useState(null);\n    const [values, setValues] = useState();\n    const [isVisible, setVisible] = useState(false);\n    const tableRef = useRef();\n    const fileInputRef = useRef(null);\n\n    useEffect(() => {\n        setData(null); // Сбрасываем данные перед загрузкой новых\n        fetchData(\"assets\", \"get\", null, (fetchedData) => {\n            setData(fetchedData);\n        });\n    }, [tab]); // Перезапрашиваем данные при изменении tab\n\n    const handleButtonClick = () => {\n        fileInputRef.current.click();\n    };\n\n    const handleFileChange = (event) => {\n        const selectedFile = event.target.files[0];\n        if (selectedFile) {\n            const formData = new FormData();\n            formData.append(\"file\", selectedFile);\n            formData.append(\"name\", tab);\n\n            fetchData(\n                `assets/import/`,\n                \"POST\",\n                formData,\n                () => {\n                    fetchData(\"assets\", \"get\", null, setData); // Перезапрашиваем данные после импорта\n                },\n                setValues,\n                setValues\n            );\n        }\n    };\n\n    const handleDownload = () => {\n        fetchData(`assets/export?name=${tab}`, \"GET\", null, null, (error) => console.error(\"Ошибка запроса:\", error), null, true, `${tab}_table.csv`);\n    };\n\n    useEffect(() => {\n        setVisible(false);\n    }, [tab]);\n\n    const toggleVisible = () => {\n        setVisible(!isVisible);\n    };\n\n    // console.log(tableRef.current?.getIsEditing?.());\n\n\n    // useEffect((isEditing) => {\n    //     toggleVisible()\n    // }, [isEditing])\n\n    let buttonText = isVisible ? \"Отмена\" : \"Создать запись\";\n\n    console.log(tableRef.current.getIsEditing());\n\n    return (\n        <div className={classes.main}>\n            {data ? (\n                <>\n                    <BasicTable key={`${tab}-${values}`}  columnlist={COLUMNS} ref={tableRef} fulldata={data[tab]} />\n                    <div style={{ display: 'flex' }}>\n                        <MyButton\n                            style={{ marginTop: '20px', marginRight: '20px', width: '250px' }}\n                            onClick={() => {\n                                toggleVisible();\n                                if (!isVisible) {\n                                    tableRef.current?.addRow();\n                                    toggleVisible();\n                                } else {\n                                    tableRef.current.cancelEdit();\n                                }\n                            }}\n                            text={buttonText}\n                        />\n                        <MySubmitButton isActive={isVisible} style={{ marginTop: '20px', marginRight: '20px', width: '250px'}} text=\"Подтвердить\" \n                            onClick={() => {\n                                tableRef.current.sendData();\n                                toggleVisible();\n                            }}\n                        />\n                        <input\n                            type=\"file\"\n                            ref={fileInputRef}\n                            style={{ display: 'none' }}\n                            onChange={handleFileChange}\n                        />\n                        <MyButton\n                            style={{ marginTop: '20px', marginLeft: 'auto', width: '250px' }}\n                            onClick={handleButtonClick}\n                            isActive={false}\n                            text={`Импорт\n                                ${values ? \"values\" : \"\"}`\n                            }\n                        />\n                        <MyButton\n                            style={{ marginTop: '20px', marginLeft: '20px', width: '250px' }}\n                            onClick={handleDownload}\n                            isActive={true}\n                            text={'Экспорт'}\n                        />\n                    </div>\n                </>\n            ) : (\n                <div style={{ margin: \"auto\" }}>\n                    <Loader />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Assets;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}