{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DamsB\\\\Desktop\\\\302\\\\frontend\\\\src\\\\components\\\\UI\\\\Table\\\\MyTable.jsx\";\nimport React from \"react\";\nimport classes from \"./MyTable.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyTable = ({\n  fulldata\n}) => {\n  if (!fulldata || fulldata.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 49\n  }, this);\n  const data = Object.keys(fulldata[0]);\n  // console.log(data)\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: data.map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: fulldata.map((obj, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: data.map(key => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: obj[key]\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n// \t<div className={classes.container}>\n// \t\t<div className={classes.table}>\n// \t\t\t<div className={classes.header}>\n// \t\t\t\t{data.map((key, index) => (\n// \t\t\t\t\t<div key={index} className={classes.cell}>\n// \t\t\t\t\t{key}\n// \t\t\t\t\t</div>\n// \t\t\t\t))}\n// \t\t\t</div>\n// \t\t\t<div className={classes.body}>\n// \t \t\t\t{fulldata.map((row, rowIndex) => (\n// \t\t\t\t\t<div key={rowIndex} className={classes.row}>\n// \t\t\t\t\t\t{data.map((cell) => (\n// \t\t\t\t\t\t\t<div\n// \t\t\t\t\t\t\t\tclassName={classes.cell}\n// \t\t\t\t\t\t\t\tkey={cell + rowIndex}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\t{row[cell]}\n// \t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t))}\n// \t\t\t\t\t</div>\n// \t\t\t\t))}\n// \t\t\t</div>\n// \t\t</div>\n// \t</div>\n// );\n// <div className={classes.container}>\n// \t<div className={classes.table}>\n// \t\t<div className={classes.header}>\n// \t\t\t{data.map((cell) => (\n// \t\t\t\t<div className={classes.cell} key={cell}>\n// \t\t\t\t\t{cell}\n// \t\t\t\t</div>\n// \t\t\t))}\n// \t\t</div>\n\n// \t\t<div className={classes.body}>\n// \t\t\t{fulldata.map((row, rowIndex) => (\n// \t\t\t\t<div key={rowIndex} className={classes.row}>\n// \t\t\t\t\t{data.map((cell) => (\n// \t\t\t\t\t\t<div\n// \t\t\t\t\t\t\tclassName={classes.cell}\n// \t\t\t\t\t\t\tkey={cell + rowIndex}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\t{row[cell]}\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t))}\n// \t\t\t\t</div>\n// \t\t\t))}\n// \t\t</div>\n// \t</div>\n// </div>\n_c = MyTable;\nexport default MyTable;\nvar _c;\n$RefreshReg$(_c, \"MyTable\");","map":{"version":3,"names":["React","classes","jsxDEV","_jsxDEV","MyTable","fulldata","length","children","fileName","_jsxFileName","lineNumber","columnNumber","data","Object","keys","map","key","obj","index","_c","$RefreshReg$"],"sources":["C:/Users/DamsB/Desktop/302/frontend/src/components/UI/Table/MyTable.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport classes from \"./MyTable.module.css\";\r\n\r\nconst MyTable = ({ fulldata }) => {\r\n\tif (!fulldata || fulldata.length === 0) return <p>Нет данных</p>;\r\n\r\n\tconst data = Object.keys(fulldata[0]);\r\n\t// console.log(data)\r\n\r\n\treturn (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    {data.map((key) => (\r\n                        <th key={key}>{key}</th>\r\n                    ))}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {fulldata.map((obj, index) => (\r\n                    <tr key={index}>\r\n                        {data.map((key) => (\r\n                            <td key={key}>{obj[key]}</td>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\n\t// \t<div className={classes.container}>\r\n\t// \t\t<div className={classes.table}>\r\n\t// \t\t\t<div className={classes.header}>\r\n\t// \t\t\t\t{data.map((key, index) => (\r\n\t// \t\t\t\t\t<div key={index} className={classes.cell}>\r\n\t// \t\t\t\t\t{key}\r\n\t// \t\t\t\t\t</div>\r\n\t// \t\t\t\t))}\r\n\t// \t\t\t</div>\r\n\t// \t\t\t<div className={classes.body}>\r\n\t// \t \t\t\t{fulldata.map((row, rowIndex) => (\r\n\t// \t\t\t\t\t<div key={rowIndex} className={classes.row}>\r\n\t// \t\t\t\t\t\t{data.map((cell) => (\r\n\t// \t\t\t\t\t\t\t<div\r\n\t// \t\t\t\t\t\t\t\tclassName={classes.cell}\r\n\t// \t\t\t\t\t\t\t\tkey={cell + rowIndex}\r\n\t// \t\t\t\t\t\t\t>\r\n\t// \t\t\t\t\t\t\t\t{row[cell]}\r\n\t// \t\t\t\t\t\t\t</div>\r\n\t// \t\t\t\t\t\t))}\r\n\t// \t\t\t\t\t</div>\r\n\t// \t\t\t\t))}\r\n\t// \t\t\t</div>\r\n\t// \t\t</div>\r\n\t// \t</div>\r\n\t// );\r\n\t\t// <div className={classes.container}>\r\n\t\t// \t<div className={classes.table}>\r\n\t\t// \t\t<div className={classes.header}>\r\n\t\t// \t\t\t{data.map((cell) => (\r\n\t\t// \t\t\t\t<div className={classes.cell} key={cell}>\r\n\t\t// \t\t\t\t\t{cell}\r\n\t\t// \t\t\t\t</div>\r\n\t\t// \t\t\t))}\r\n\t\t// \t\t</div>\r\n\r\n\t\t// \t\t<div className={classes.body}>\r\n\t\t// \t\t\t{fulldata.map((row, rowIndex) => (\r\n\t\t// \t\t\t\t<div key={rowIndex} className={classes.row}>\r\n\t\t// \t\t\t\t\t{data.map((cell) => (\r\n\t\t// \t\t\t\t\t\t<div\r\n\t\t// \t\t\t\t\t\t\tclassName={classes.cell}\r\n\t\t// \t\t\t\t\t\t\tkey={cell + rowIndex}\r\n\t\t// \t\t\t\t\t\t>\r\n\t\t// \t\t\t\t\t\t\t{row[cell]}\r\n\t\t// \t\t\t\t\t\t</div>\r\n\t\t// \t\t\t\t\t))}\r\n\t\t// \t\t\t\t</div>\r\n\t\t// \t\t\t))}\r\n\t\t// \t\t</div>\r\n\t\t// \t</div>\r\n\t\t// </div>\r\n\r\n\r\nexport default MyTable;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACjC,IAAI,CAACA,QAAQ,IAAIA,QAAQ,CAACC,MAAM,KAAK,CAAC,EAAE,oBAAOH,OAAA;IAAAI,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEhE,MAAMC,IAAI,GAAGC,MAAM,CAACC,IAAI,CAACT,QAAQ,CAAC,CAAC,CAAC,CAAC;EACrC;;EAEA,oBACOF,OAAA;IAAAI,QAAA,gBACIJ,OAAA;MAAAI,QAAA,eACIJ,OAAA;QAAAI,QAAA,EACKK,IAAI,CAACG,GAAG,CAAEC,GAAG,iBACVb,OAAA;UAAAI,QAAA,EAAeS;QAAG,GAATA,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACRR,OAAA;MAAAI,QAAA,EACKF,QAAQ,CAACU,GAAG,CAAC,CAACE,GAAG,EAAEC,KAAK,kBACrBf,OAAA;QAAAI,QAAA,EACKK,IAAI,CAACG,GAAG,CAAEC,GAAG,iBACVb,OAAA;UAAAI,QAAA,EAAeU,GAAG,CAACD,GAAG;QAAC,GAAdA,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CAC/B;MAAC,GAHGO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB,CAAC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAQ,EAAA,GA/EIf,OAAO;AAkFb,eAAeA,OAAO;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}