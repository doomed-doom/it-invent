{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DamsB\\\\Desktop\\\\302\\\\frontend\\\\src\\\\components\\\\UI\\\\Table\\\\MyTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useTable } from 'react-table';\nimport classes from \"./MyTable.module.css\";\nimport '../../../utils/editTables';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyTable = ({\n  fulldata\n}) => {\n  _s();\n  if (!fulldata || fulldata.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 50\n  }, this);\n  const tableInstance = useTable({\n    columns,\n    fulldata\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return (\n    /*#__PURE__*/\n    // <div className={classes.container}>\n    //       <div className={classes.table}>\n    //         <div className={classes.table__row}>\n    //           {Object.keys(fulldata[0] || {}).map((key, index) => (\n    //             <div key={index} className={`${classes.table__cell} ${classes.table__header}`}>\n    //               {key}\n    //             </div>\n    //           ))}\n    //         </div>\n    //         {fulldata.map((row, rowIndex) => (\n    //           <div key={rowIndex} className={classes.table__row}>\n    //             {Object.values(row).map((value, index) => (\n    //               <div key={index} className={classes.table__cell}>\n    //                 {(value &&\n    //                   (Array.isArray(value) ? value.join(\", \") : value)) ||\n    //                   \"-\"}\n    //               </div>\n    //             ))}\n    //           </div>\n    //         ))}\n    //     </div>\n    // </div>\n    _jsxDEV(\"table\", {\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(MyTable, \"Tx/KrHBxU/jU8U+MIvn5eB/AsMY=\", false, function () {\n  return [useTable];\n});\n_c = MyTable;\nexport default MyTable;\nvar _c;\n$RefreshReg$(_c, \"MyTable\");","map":{"version":3,"names":["React","useState","useTable","classes","jsxDEV","_jsxDEV","MyTable","fulldata","_s","length","children","fileName","_jsxFileName","lineNumber","columnNumber","tableInstance","columns","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["C:/Users/DamsB/Desktop/302/frontend/src/components/UI/Table/MyTable.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useTable } from 'react-table'\r\n\r\n\r\n\r\n\r\nimport classes from \"./MyTable.module.css\";\r\n\r\nimport '../../../utils/editTables'\r\n\r\n\r\n\r\n\r\n\r\nconst MyTable = ({ fulldata }) => {\r\n  if (!fulldata || fulldata.length === 0) return <p>Нет данных</p>;\r\n\r\n  const tableInstance = useTable({\r\n\tcolumns,\r\n\tfulldata\r\n})\r\n\r\nconst { getTableProps, getTableBodyProps, headerGroups, footerGroups, rows, prepareRow} = tableInstance\r\n\r\n  return (\r\n    // <div className={classes.container}>\r\n    //       <div className={classes.table}>\r\n    //         <div className={classes.table__row}>\r\n    //           {Object.keys(fulldata[0] || {}).map((key, index) => (\r\n    //             <div key={index} className={`${classes.table__cell} ${classes.table__header}`}>\r\n    //               {key}\r\n    //             </div>\r\n    //           ))}\r\n    //         </div>\r\n    //         {fulldata.map((row, rowIndex) => (\r\n    //           <div key={rowIndex} className={classes.table__row}>\r\n    //             {Object.values(row).map((value, index) => (\r\n    //               <div key={index} className={classes.table__cell}>\r\n    //                 {(value &&\r\n    //                   (Array.isArray(value) ? value.join(\", \") : value)) ||\r\n    //                   \"-\"}\r\n    //               </div>\r\n    //             ))}\r\n    //           </div>\r\n    //         ))}\r\n    //     </div>\r\n    // </div>\r\n\t\r\n    <table {...getTableProps()}>\r\n        <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                    {headerGroup.headers.map((column) => (\r\n                        <th {...column.getHeaderProps()}> \r\n                          {column.render('Header')}\r\n                       </th>\r\n                    ))}\r\n                </tr>\r\n            ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n            {rows.map(row => {\r\n                 prepareRow(row)\r\n                  return (\r\n                    <tr {...row.getRowProps()}>\r\n                       {row.cells.map((cell) => {\r\n                         return <td {...cell.getCellProps()}>\r\n                          {cell.render('Cell')}</td>\r\n                            })}\r\n                    </tr>\r\n                    )\r\n                })\r\n            }\r\n        </tbody>\r\n    </table>\r\n  )\r\n}; \r\n\r\nexport default MyTable;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,aAAa;AAKtC,OAAOC,OAAO,MAAM,sBAAsB;AAE1C,OAAO,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMlC,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChC,IAAI,CAACD,QAAQ,IAAIA,QAAQ,CAACE,MAAM,KAAK,CAAC,EAAE,oBAAOJ,OAAA;IAAAK,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEhE,MAAMC,aAAa,GAAGb,QAAQ,CAAC;IAChCc,OAAO;IACPT;EACD,CAAC,CAAC;EAEF,MAAM;IAAEU,aAAa;IAAEC,iBAAiB;IAAEC,YAAY;IAAEC,YAAY;IAAEC,IAAI;IAAEC;EAAU,CAAC,GAAGP,aAAa;EAErG;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEAV,OAAA;MAAA,GAAWY,aAAa,CAAC,CAAC;MAAAP,QAAA,gBACtBL,OAAA;QAAAK,QAAA,EACKS,YAAY,CAACI,GAAG,CAAEC,WAAW,iBAC1BnB,OAAA;UAAA,GAAQmB,WAAW,CAACC,mBAAmB,CAAC,CAAC;UAAAf,QAAA,EACpCc,WAAW,CAACE,OAAO,CAACH,GAAG,CAAEI,MAAM,iBAC5BtB,OAAA;YAAA,GAAQsB,MAAM,CAACC,cAAc,CAAC,CAAC;YAAAlB,QAAA,EAC5BiB,MAAM,CAACE,MAAM,CAAC,QAAQ;UAAC;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACRT,OAAA;QAAA,GAAWa,iBAAiB,CAAC,CAAC;QAAAR,QAAA,EACzBW,IAAI,CAACE,GAAG,CAACO,GAAG,IAAI;UACZR,UAAU,CAACQ,GAAG,CAAC;UACd,oBACEzB,OAAA;YAAA,GAAQyB,GAAG,CAACC,WAAW,CAAC,CAAC;YAAArB,QAAA,EACrBoB,GAAG,CAACE,KAAK,CAACT,GAAG,CAAEU,IAAI,IAAK;cACvB,oBAAO5B,OAAA;gBAAA,GAAQ4B,IAAI,CAACC,YAAY,CAAC,CAAC;gBAAAxB,QAAA,EAChCuB,IAAI,CAACJ,MAAM,CAAC,MAAM;cAAC;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YACxB,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAET,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;AAEZ,CAAC;AAACN,EAAA,CA9DIF,OAAO;EAAA,QAGWJ,QAAQ;AAAA;AAAAiC,EAAA,GAH1B7B,OAAO;AAgEb,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}