{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DamsB\\\\Desktop\\\\302\\\\frontend\\\\src\\\\App.js\";\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// const App = () => {\n// \tconst name = \"миграции\";\n// \tconst [file, setFile] = useState(null);\n// \tconst [error, setError] = useState(\"\");\n\n// \tconst handleDownload = async () => {\n// \t\ttry {\n// \t\t\tconst response = await axios.post(\n// \t\t\t\t\"http://127.0.0.1:8000/api/import/\",\n// \t\t\t\t{\n// \t\t\t\t\tname: name,\n// \t\t\t\t}\n// \t\t\t);\n\n// \t\t\tif (!response.data.message) {\n// \t\t\t\tconst url = window.URL.createObjectURL(\n// \t\t\t\t\tnew Blob([response.data])\n// \t\t\t\t);\n// \t\t\t\tconst a = document.createElement(\"a\");\n// \t\t\t\ta.href = url;\n// \t\t\t\ta.download = `${name}.csv`;\n// \t\t\t\tdocument.body.appendChild(a);\n// \t\t\t\ta.click();\n// \t\t\t\tdocument.body.removeChild(a);\n// \t\t\t\twindow.URL.revokeObjectURL(url);\n// \t\t\t}\n\n// \t\t\tconsole.log(response.data);\n// \t\t} catch (error) {\n// \t\t\tif (error.response) {\n// \t\t\t\tconsole.error(\"Ошибка ответа:\", error.response.data);\n// \t\t\t} else {\n// \t\t\t\tconsole.error(\"Ошибка сети или сервера:\", error.message);\n// \t\t\t}\n// \t\t}\n// \t};\n\n// \tconst handleFileChange = (event) => {\n// \t\tconst selectedFile = event.target.files[0];\n// \t\tif (selectedFile) {\n// \t\t\tsetFile(selectedFile);\n// \t\t\tsetError(\"\");\n// \t\t}\n// \t};\n\n// \tconst handleSubmit = async (event) => {\n// \t\tevent.preventDefault();\n\n// \t\tif (!file) {\n// \t\t\tsetError(\"Пожалуйста, выберите файл для загрузки.\");\n// \t\t\treturn;\n// \t\t}\n\n// \t\tconst formData = new FormData();\n// \t\tformData.append(\"file\", file);\n// \t\tformData.append(\"name\", name);\n\n// \t\ttry {\n// \t\t\tconst response = await axios.post(\n// \t\t\t\t\"http://127.0.0.1:8000/api/export/\",\n// \t\t\t\tformData\n// \t\t\t);\n// \t\t\tconsole.log(response.data);\n// \t\t\tsetFile(null);\n// \t\t} catch (error) {\n// \t\t\tif (error.response) {\n// \t\t\t\tconsole.error(\"Ошибка ответа:\", error.response.data);\n// \t\t\t} else {\n// \t\t\t\tconsole.error(\"Ошибка сети или сервера:\", error.message);\n// \t\t\t}\n// \t\t}\n// \t};\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<button onClick={handleDownload}>Скачать файл с сервера</button>\n\n// \t\t\t<form onSubmit={handleSubmit}>\n// \t\t\t\t<input type=\"file\" onChange={handleFileChange} />\n// \t\t\t\t{error && <p style={{ color: \"red\" }}>{error}</p>}\n// \t\t\t\t<button type=\"submit\">Загрузить файл</button>\n// \t\t\t</form>\n// \t\t</div>\n// \t);\n// };\n\n// export default App;\n\nimport React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport \"./styles/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AppRouter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 3\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","AppRouter","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DamsB/Desktop/302/frontend/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// const App = () => {\n// \tconst name = \"миграции\";\n// \tconst [file, setFile] = useState(null);\n// \tconst [error, setError] = useState(\"\");\n\n// \tconst handleDownload = async () => {\n// \t\ttry {\n// \t\t\tconst response = await axios.post(\n// \t\t\t\t\"http://127.0.0.1:8000/api/import/\",\n// \t\t\t\t{\n// \t\t\t\t\tname: name,\n// \t\t\t\t}\n// \t\t\t);\n\n// \t\t\tif (!response.data.message) {\n// \t\t\t\tconst url = window.URL.createObjectURL(\n// \t\t\t\t\tnew Blob([response.data])\n// \t\t\t\t);\n// \t\t\t\tconst a = document.createElement(\"a\");\n// \t\t\t\ta.href = url;\n// \t\t\t\ta.download = `${name}.csv`;\n// \t\t\t\tdocument.body.appendChild(a);\n// \t\t\t\ta.click();\n// \t\t\t\tdocument.body.removeChild(a);\n// \t\t\t\twindow.URL.revokeObjectURL(url);\n// \t\t\t}\n\n// \t\t\tconsole.log(response.data);\n// \t\t} catch (error) {\n// \t\t\tif (error.response) {\n// \t\t\t\tconsole.error(\"Ошибка ответа:\", error.response.data);\n// \t\t\t} else {\n// \t\t\t\tconsole.error(\"Ошибка сети или сервера:\", error.message);\n// \t\t\t}\n// \t\t}\n// \t};\n\n// \tconst handleFileChange = (event) => {\n// \t\tconst selectedFile = event.target.files[0];\n// \t\tif (selectedFile) {\n// \t\t\tsetFile(selectedFile);\n// \t\t\tsetError(\"\");\n// \t\t}\n// \t};\n\n// \tconst handleSubmit = async (event) => {\n// \t\tevent.preventDefault();\n\n// \t\tif (!file) {\n// \t\t\tsetError(\"Пожалуйста, выберите файл для загрузки.\");\n// \t\t\treturn;\n// \t\t}\n\n// \t\tconst formData = new FormData();\n// \t\tformData.append(\"file\", file);\n// \t\tformData.append(\"name\", name);\n\n// \t\ttry {\n// \t\t\tconst response = await axios.post(\n// \t\t\t\t\"http://127.0.0.1:8000/api/export/\",\n// \t\t\t\tformData\n// \t\t\t);\n// \t\t\tconsole.log(response.data);\n// \t\t\tsetFile(null);\n// \t\t} catch (error) {\n// \t\t\tif (error.response) {\n// \t\t\t\tconsole.error(\"Ошибка ответа:\", error.response.data);\n// \t\t\t} else {\n// \t\t\t\tconsole.error(\"Ошибка сети или сервера:\", error.message);\n// \t\t\t}\n// \t\t}\n// \t};\n\n// \treturn (\n// \t\t<div>\n// \t\t\t<button onClick={handleDownload}>Скачать файл с сервера</button>\n\n// \t\t\t<form onSubmit={handleSubmit}>\n// \t\t\t\t<input type=\"file\" onChange={handleFileChange} />\n// \t\t\t\t{error && <p style={{ color: \"red\" }}>{error}</p>}\n// \t\t\t\t<button type=\"submit\">Загрузить файл</button>\n// \t\t\t</form>\n// \t\t</div>\n// \t);\n// };\n\n// export default App;\n\nimport React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport AppRouter from \"./components/AppRouter\";\n\nimport \"./styles/App.css\";\n\nfunction App() {\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<AppRouter />\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,kBAAkB;AAEhD,OAAOC,SAAS,MAAM,wBAAwB;AAE9C,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EACd,oBACCD,OAAA,CAACH,aAAa;IAAAK,QAAA,eACbF,OAAA,CAACF,SAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAElB;AAACC,EAAA,GANQN,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}