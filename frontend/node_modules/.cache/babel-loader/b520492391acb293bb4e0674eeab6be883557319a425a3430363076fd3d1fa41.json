{"ast":null,"code":"import axios from \"axios\";\nimport Cookies from \"js-cookie\";\nexport const refreshTokens = async () => {\n  const refresh = Cookies.get(\"refresh\");\n  if (!refresh) return console.warn(\"Refresh token отсутствует!\") || false;\n  try {\n    const {\n      data\n    } = await axios.post(\"http://localhost:8000/api/auth/token/\", {\n      refresh\n    });\n    Cookies.set(\"access\", data.access, {\n      expires: 15 / 1440,\n      // secure: true,\n      sameSite: \"Lax\"\n    });\n    Cookies.set(\"refresh\", data.refresh, {\n      expires: 30,\n      // secure: true,\n      sameSite: \"Lax\"\n    });\n    window.location.reload();\n    return true;\n  } catch (err) {\n    return false;\n  }\n};\nexport const fetchData = async (url, method, data = null, setResponse = null, setFetchError = null, setFetchSuccess = null) => {\n  let access = Cookies.get(\"access\");\n  try {\n    const response = await axios({\n      method,\n      url: `http://localhost:8000/api/${url}/`,\n      data,\n      headers: {\n        Authorization: `Bearer ${access}`,\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(\"Успех:\", response.data);\n    if (response.data.access && response.data.refresh) {\n      Cookies.set(\"access\", response.data.access, {\n        expires: 15 / 1440,\n        // secure: true,\n        sameSite: \"Lax\"\n      });\n      Cookies.set(\"refresh\", response.data.refresh, {\n        expires: 30,\n        // secure: true,\n        sameSite: \"Lax\"\n      });\n      window.location.reload();\n    }\n    setResponse === null || setResponse === void 0 ? void 0 : setResponse(response.data);\n    setFetchSuccess === null || setFetchSuccess === void 0 ? void 0 : setFetchSuccess(response.data.message);\n  } catch (error) {\n    if (error.response) {\n      const fetchError = error.response.data.detail;\n      console.error(\"Ошибка ответа:\", error.response.data);\n      setFetchError === null || setFetchError === void 0 ? void 0 : setFetchError(fetchError || \"Ошибка сервера.\");\n      if (fetchError === \"Authentication credentials were not provided.\") {\n        console.warn(\"Токен истёк. Попытка обновить токен...\");\n        await refreshTokens();\n      }\n    } else {\n      console.error(\"Ошибка сети или сервера:\", error.message);\n      setFetchError === null || setFetchError === void 0 ? void 0 : setFetchError(\"Ошибка сети или сервера.\");\n    }\n  }\n};","map":{"version":3,"names":["axios","Cookies","refreshTokens","refresh","get","console","warn","data","post","set","access","expires","sameSite","window","location","reload","err","fetchData","url","method","setResponse","setFetchError","setFetchSuccess","response","headers","Authorization","log","message","error","fetchError","detail"],"sources":["C:/Users/DamsB/Desktop/301/frontend/src/utils/fetchData.js"],"sourcesContent":["import axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nexport const refreshTokens = async () => {\n\tconst refresh = Cookies.get(\"refresh\");\n\n\tif (!refresh) return console.warn(\"Refresh token отсутствует!\") || false;\n\n\ttry {\n\t\tconst { data } = await axios.post(\n\t\t\t\"http://localhost:8000/api/auth/token/\",\n\t\t\t{ refresh }\n\t\t);\n\n\t\tCookies.set(\"access\", data.access, {\n\t\t\texpires: 15 / 1440,\n\t\t\t// secure: true,\n\t\t\tsameSite: \"Lax\",\n\t\t});\n\t\tCookies.set(\"refresh\", data.refresh, {\n\t\t\texpires: 30,\n\t\t\t// secure: true,\n\t\t\tsameSite: \"Lax\",\n\t\t});\n\n\t\twindow.location.reload();\n\n\t\treturn true;\n\t} catch (err) {\n\t\treturn false;\n\t}\n};\n\nexport const fetchData = async (\n\turl,\n\tmethod,\n\tdata = null,\n\tsetResponse = null,\n\tsetFetchError = null,\n\tsetFetchSuccess = null\n) => {\n\tlet access = Cookies.get(\"access\");\n\n\ttry {\n\t\tconst response = await axios({\n\t\t\tmethod,\n\t\t\turl: `http://localhost:8000/api/${url}/`,\n\t\t\tdata,\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${access}`,\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t});\n\n\t\tconsole.log(\"Успех:\", response.data);\n\n\t\tif (response.data.access && response.data.refresh) {\n\t\t\tCookies.set(\"access\", response.data.access, {\n\t\t\t\texpires: 15 / 1440,\n\t\t\t\t// secure: true,\n\t\t\t\tsameSite: \"Lax\",\n\t\t\t});\n\t\t\tCookies.set(\"refresh\", response.data.refresh, {\n\t\t\t\texpires: 30,\n\t\t\t\t// secure: true,\n\t\t\t\tsameSite: \"Lax\",\n\t\t\t});\n\t\t\twindow.location.reload();\n\t\t}\n\n\t\tsetResponse?.(response.data);\n\t\tsetFetchSuccess?.(response.data.message);\n\t} catch (error) {\n\t\tif (error.response) {\n\t\t\tconst fetchError = error.response.data.detail;\n\t\t\tconsole.error(\"Ошибка ответа:\", error.response.data);\n\t\t\tsetFetchError?.(fetchError || \"Ошибка сервера.\");\n\n\t\t\tif (\n\t\t\t\tfetchError === \"Authentication credentials were not provided.\"\n\t\t\t) {\n\t\t\t\tconsole.warn(\"Токен истёк. Попытка обновить токен...\");\n\n\t\t\t\tawait refreshTokens();\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.error(\"Ошибка сети или сервера:\", error.message);\n\t\t\tsetFetchError?.(\"Ошибка сети или сервера.\");\n\t\t}\n\t}\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}