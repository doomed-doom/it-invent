{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DamsB\\\\Desktop\\\\302\\\\frontend\\\\src\\\\components\\\\UI\\\\Table\\\\BasicTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState } from 'react';\nimport { useTable } from 'react-table';\nimport { COLUMNS } from './Columns';\nimport classes from './MyTable.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BasicTable({\n  fulldata\n}) {\n  _s();\n  const [data, setData] = useState(fulldata);\n  const columns = useMemo(() => COLUMNS, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n\n  // Функция добавления новой строки\n  const addRow = () => {\n    const newRow = {\n      id: data.length + 1,\n      \"Компания\": 'Новый пользователь',\n      age: Math.floor(Math.random() * 50) + 20\n    };\n    setData([...data, newRow]); // Добавляем новую строку\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.addButton,\n      onClick: addRow,\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0442\\u0440\\u043E\\u043A\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: classes.table,\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: classes.table__row,\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: classes.table__cell,\n            ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: classes.table__row,\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: classes.table__cell,\n              ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(BasicTable, \"6IuR5xcM7MVxnbaSmRe18FbUCQc=\", false, function () {\n  return [useTable];\n});\n_c = BasicTable;\nexport default BasicTable;\nvar _c;\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"names":["React","useMemo","useState","useTable","COLUMNS","classes","jsxDEV","_jsxDEV","BasicTable","fulldata","_s","data","setData","columns","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","addRow","newRow","id","length","age","Math","floor","random","className","container","children","addButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","table","map","headerGroup","table__row","getHeaderGroupProps","headers","column","table__cell","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["C:/Users/DamsB/Desktop/302/frontend/src/components/UI/Table/BasicTable.jsx"],"sourcesContent":["import React, { useMemo, useState } from 'react';\r\nimport { useTable } from 'react-table';\r\nimport { COLUMNS } from './Columns';\r\nimport classes from './MyTable.module.css';\r\n\r\nfunction BasicTable({ fulldata }) {\r\n    const [data, setData] = useState(fulldata);\r\n\r\n    const columns = useMemo(() => COLUMNS, []); \r\n\r\n    const tableInstance = useTable({\r\n        columns,\r\n        data\r\n    });\r\n\r\n    const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } = tableInstance;\r\n\r\n    // Функция добавления новой строки\r\n    const addRow = () => {\r\n        const newRow = {\r\n            id: data.length + 1,\r\n            \"Компания\": 'Новый пользователь',\r\n            age: Math.floor(Math.random() * 50) + 20,\r\n        };\r\n        setData([...data, newRow]); // Добавляем новую строку\r\n    };\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <button className={classes.addButton} onClick={addRow}>Добавить строку</button>\r\n            <table className={classes.table} {...getTableProps()}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr className={classes.table__row} {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th className={classes.table__cell} {...column.getHeaderProps()}>\r\n                                    {column.render('Header')}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {rows.map(row => {\r\n                        prepareRow(row);\r\n                        return (\r\n                            <tr className={classes.table__row} {...row.getRowProps()}>\r\n                                {row.cells.map(cell => (\r\n                                    <td className={classes.table__cell} {...cell.getCellProps()}>\r\n                                        {cell.render('Cell')}\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BasicTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}